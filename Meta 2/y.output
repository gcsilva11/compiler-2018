Terminals which are not used

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition
    3                         | FunctionsAndDeclarations FunctionDeclaration
    4                         | FunctionsAndDeclarations Declaration
    5                         | FunctionsAndDeclarations error SEMI
    6                         | FunctionDefinition
    7                         | FunctionDeclaration
    8                         | Declaration
    9                         | error SEMI

   10 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

   11 FunctionBody: LBRACE RBRACE
   12             | LBRACE DeclarationAndStatements RBRACE

   13 DeclarationAndStatements: Statement DeclarationAndStatements
   14                         | Declaration DeclarationAndStatements
   15                         | Statement
   16                         | Declaration

   17 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   18 FunctionDeclarator: ID LPAR ParameterList RPAR

   19 ParameterList: ParameterDeclaration ParameterListAux

   20 ParameterListAux: /* empty */
   21                 | COMMA ParameterDeclaration ParameterListAux

   22 ParameterDeclaration: TypeSpec
   23                     | TypeSpec ID

   24 Declaration: TypeSpec Declarator DeclarationAux SEMI

   25 DeclarationAux: /* empty */
   26               | COMMA Declarator DeclarationAux

   27 TypeSpec: CHAR
   28         | INT
   29         | VOID
   30         | SHORT
   31         | DOUBLE

   32 Declarator: ID
   33           | ID ASSIGN Expr

   34 Statement: SEMI
   35          | Expr SEMI
   36          | LBRACE RBRACE
   37          | LBRACE StatementAux RBRACE
   38          | IF LPAR Expr RPAR StatementError
   39          | IF LPAR Expr RPAR StatementError ELSE StatementError
   40          | WHILE LPAR Expr RPAR StatementError
   41          | RETURN SEMI
   42          | RETURN Expr SEMI
   43          | LBRACE error RBRACE

   44 StatementAux: StatementError
   45             | StatementAux StatementError

   46 StatementError: Statement
   47               | error SEMI

   48 Expr: Expr ASSIGN Expr
   49     | Expr COMMA Expr
   50     | Expr EQ Expr
   51     | Expr NE Expr
   52     | Expr LE Expr
   53     | Expr GE Expr
   54     | Expr LT Expr
   55     | Expr GT Expr
   56     | Expr PLUS Expr
   57     | Expr MINUS Expr
   58     | Expr MUL Expr
   59     | Expr DIV Expr
   60     | Expr MOD Expr
   61     | Expr OR Expr
   62     | Expr AND Expr
   63     | Expr BITWISEAND Expr
   64     | Expr BITWISEOR Expr
   65     | Expr BITWISEXOR Expr
   66     | PLUS Expr
   67     | MINUS Expr
   68     | NOT Expr
   69     | ID LPAR RPAR
   70     | ID LPAR Expr2 RPAR
   71     | ID
   72     | INTLIT
   73     | CHRLIT
   74     | REALLIT
   75     | LPAR Expr RPAR
   76     | ID LPAR error RPAR
   77     | LPAR error RPAR

   78 Expr2: Expr2 ASSIGN Expr2
   79      | Expr2 COMMA Expr
   80      | Expr2 EQ Expr2
   81      | Expr2 NE Expr2
   82      | Expr2 LE Expr2
   83      | Expr2 GE Expr2
   84      | Expr2 LT Expr2
   85      | Expr2 GT Expr2
   86      | Expr2 PLUS Expr2
   87      | Expr2 MINUS Expr2
   88      | Expr2 MUL Expr2
   89      | Expr2 DIV Expr2
   90      | Expr2 MOD Expr2
   91      | Expr2 OR Expr2
   92      | Expr2 AND Expr2
   93      | Expr2 BITWISEAND Expr2
   94      | Expr2 BITWISEOR Expr2
   95      | Expr2 BITWISEXOR Expr2
   96      | PLUS Expr2
   97      | MINUS Expr2
   98      | NOT Expr2
   99      | ID LPAR RPAR
  100      | ID LPAR Expr2 RPAR
  101      | ID
  102      | INTLIT
  103      | CHRLIT
  104      | REALLIT
  105      | LPAR Expr RPAR
  106      | ID LPAR error RPAR
  107      | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 5 9 43 47 76 77 106 107
CHAR (258) 27
ELSE (259) 39
WHILE (260) 40
IF (261) 38 39
SHORT (262) 30
INT (263) 28
DOUBLE (264) 31
RETURN (265) 41 42
VOID (266) 29
BITWISEOR (267) 64 94
BITWISEAND (268) 63 93
BITWISEXOR (269) 65 95
AND (270) 62 92
ASSIGN (271) 33 48 78
MUL (272) 58 88
COMMA (273) 21 26 49 79
DIV (274) 59 89
EQ (275) 50 80
GE (276) 53 83
GT (277) 55 85
LBRACE (278) 11 12 36 37 43
LE (279) 52 82
LPAR (280) 18 38 39 40 69 70 75 76 77 99 100 105 106 107
LT (281) 54 84
MINUS (282) 57 67 87 97
MOD (283) 60 90
NE (284) 51 81
NOT (285) 68 98
OR (286) 61 91
PLUS (287) 56 66 86 96
RBRACE (288) 11 12 36 37 43
RPAR (289) 18 38 39 40 69 70 75 76 77 99 100 105 106 107
SEMI (290) 5 9 17 24 34 35 41 42 47
REALLIT (291) 74 104
CHRLIT (292) 73 103
INTLIT (293) 72 102
ID (294) 18 23 32 33 69 70 71 76 99 100 101 106
RESERVED (295)
SIGNAL (296)
ELSE_PRIORITY (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Program (44)
    on left: 1, on right: 0
FunctionsAndDeclarations (45)
    on left: 2 3 4 5 6 7 8 9, on right: 1 2 3 4 5
FunctionDefinition (46)
    on left: 10, on right: 2 6
FunctionBody (47)
    on left: 11 12, on right: 10
DeclarationAndStatements (48)
    on left: 13 14 15 16, on right: 12 13 14
FunctionDeclaration (49)
    on left: 17, on right: 3 7
FunctionDeclarator (50)
    on left: 18, on right: 10 17
ParameterList (51)
    on left: 19, on right: 18
ParameterListAux (52)
    on left: 20 21, on right: 19 21
ParameterDeclaration (53)
    on left: 22 23, on right: 19 21
Declaration (54)
    on left: 24, on right: 4 8 14 16
DeclarationAux (55)
    on left: 25 26, on right: 24 26
TypeSpec (56)
    on left: 27 28 29 30 31, on right: 10 17 22 23 24
Declarator (57)
    on left: 32 33, on right: 24 26
Statement (58)
    on left: 34 35 36 37 38 39 40 41 42 43, on right: 13 15 46
StatementAux (59)
    on left: 44 45, on right: 37 45
StatementError (60)
    on left: 46 47, on right: 38 39 40 44 45
Expr (61)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76 77, on right: 33 35 38 39 40 42
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    75 79 105
Expr2 (62)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99 100 101 102 103 104 105 106 107, on right: 70 78 79
    80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 100


state 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    SHORT   shift, and go to state 3
    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


state 1

    9 FunctionsAndDeclarations: error . SEMI

    SEMI  shift, and go to state 13


state 2

   27 TypeSpec: CHAR .

    $default  reduce using rule 27 (TypeSpec)


state 3

   30 TypeSpec: SHORT .

    $default  reduce using rule 30 (TypeSpec)


state 4

   28 TypeSpec: INT .

    $default  reduce using rule 28 (TypeSpec)


state 5

   31 TypeSpec: DOUBLE .

    $default  reduce using rule 31 (TypeSpec)


state 6

   29 TypeSpec: VOID .

    $default  reduce using rule 29 (TypeSpec)


state 7

    0 $accept: Program . $end

    $end  shift, and go to state 14


state 8

    1 Program: FunctionsAndDeclarations .
    2 FunctionsAndDeclarations: FunctionsAndDeclarations . FunctionDefinition
    3                         | FunctionsAndDeclarations . FunctionDeclaration
    4                         | FunctionsAndDeclarations . Declaration
    5                         | FunctionsAndDeclarations . error SEMI

    error   shift, and go to state 15
    CHAR    shift, and go to state 2
    SHORT   shift, and go to state 3
    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 1 (Program)

    FunctionDefinition   go to state 16
    FunctionDeclaration  go to state 17
    Declaration          go to state 18
    TypeSpec             go to state 12


state 9

    6 FunctionsAndDeclarations: FunctionDefinition .

    $default  reduce using rule 6 (FunctionsAndDeclarations)


state 10

    7 FunctionsAndDeclarations: FunctionDeclaration .

    $default  reduce using rule 7 (FunctionsAndDeclarations)


state 11

    8 FunctionsAndDeclarations: Declaration .

    $default  reduce using rule 8 (FunctionsAndDeclarations)


state 12

   10 FunctionDefinition: TypeSpec . FunctionDeclarator FunctionBody
   17 FunctionDeclaration: TypeSpec . FunctionDeclarator SEMI
   24 Declaration: TypeSpec . Declarator DeclarationAux SEMI

    ID  shift, and go to state 19

    FunctionDeclarator  go to state 20
    Declarator          go to state 21


state 13

    9 FunctionsAndDeclarations: error SEMI .

    $default  reduce using rule 9 (FunctionsAndDeclarations)


state 14

    0 $accept: Program $end .

    $default  accept


state 15

    5 FunctionsAndDeclarations: FunctionsAndDeclarations error . SEMI

    SEMI  shift, and go to state 22


state 16

    2 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition .

    $default  reduce using rule 2 (FunctionsAndDeclarations)


state 17

    3 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDeclaration .

    $default  reduce using rule 3 (FunctionsAndDeclarations)


state 18

    4 FunctionsAndDeclarations: FunctionsAndDeclarations Declaration .

    $default  reduce using rule 4 (FunctionsAndDeclarations)


state 19

   18 FunctionDeclarator: ID . LPAR ParameterList RPAR
   32 Declarator: ID .
   33           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 23
    LPAR    shift, and go to state 24

    $default  reduce using rule 32 (Declarator)


state 20

   10 FunctionDefinition: TypeSpec FunctionDeclarator . FunctionBody
   17 FunctionDeclaration: TypeSpec FunctionDeclarator . SEMI

    LBRACE  shift, and go to state 25
    SEMI    shift, and go to state 26

    FunctionBody  go to state 27


state 21

   24 Declaration: TypeSpec Declarator . DeclarationAux SEMI

    COMMA  shift, and go to state 28

    $default  reduce using rule 25 (DeclarationAux)

    DeclarationAux  go to state 29


state 22

    5 FunctionsAndDeclarations: FunctionsAndDeclarations error SEMI .

    $default  reduce using rule 5 (FunctionsAndDeclarations)


state 23

   33 Declarator: ID ASSIGN . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 38


state 24

   18 FunctionDeclarator: ID LPAR . ParameterList RPAR

    CHAR    shift, and go to state 2
    SHORT   shift, and go to state 3
    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 39
    ParameterDeclaration  go to state 40
    TypeSpec              go to state 41


state 25

   11 FunctionBody: LBRACE . RBRACE
   12             | LBRACE . DeclarationAndStatements RBRACE

    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    SHORT    shift, and go to state 3
    INT      shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 44
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    RBRACE   shift, and go to state 46
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    DeclarationAndStatements  go to state 48
    Declaration               go to state 49
    TypeSpec                  go to state 50
    Statement                 go to state 51
    Expr                      go to state 52


state 26

   17 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI .

    $default  reduce using rule 17 (FunctionDeclaration)


state 27

   10 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody .

    $default  reduce using rule 10 (FunctionDefinition)


state 28

   26 DeclarationAux: COMMA . Declarator DeclarationAux

    ID  shift, and go to state 53

    Declarator  go to state 54


state 29

   24 Declaration: TypeSpec Declarator DeclarationAux . SEMI

    SEMI  shift, and go to state 55


state 30

   75 Expr: LPAR . Expr RPAR
   77     | LPAR . error RPAR

    error    shift, and go to state 56
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 57


state 31

   67 Expr: MINUS . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 58


state 32

   68 Expr: NOT . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 59


state 33

   66 Expr: PLUS . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 60


state 34

   74 Expr: REALLIT .

    $default  reduce using rule 74 (Expr)


state 35

   73 Expr: CHRLIT .

    $default  reduce using rule 73 (Expr)


state 36

   72 Expr: INTLIT .

    $default  reduce using rule 72 (Expr)


state 37

   69 Expr: ID . LPAR RPAR
   70     | ID . LPAR Expr2 RPAR
   71     | ID .
   76     | ID . LPAR error RPAR

    LPAR  shift, and go to state 61

    $default  reduce using rule 71 (Expr)


state 38

   33 Declarator: ID ASSIGN Expr .
   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 33 (Declarator)


state 39

   18 FunctionDeclarator: ID LPAR ParameterList . RPAR

    RPAR  shift, and go to state 80


state 40

   19 ParameterList: ParameterDeclaration . ParameterListAux

    COMMA  shift, and go to state 81

    $default  reduce using rule 20 (ParameterListAux)

    ParameterListAux  go to state 82


state 41

   22 ParameterDeclaration: TypeSpec .
   23                     | TypeSpec . ID

    ID  shift, and go to state 83

    $default  reduce using rule 22 (ParameterDeclaration)


state 42

   40 Statement: WHILE . LPAR Expr RPAR StatementError

    LPAR  shift, and go to state 84


state 43

   38 Statement: IF . LPAR Expr RPAR StatementError
   39          | IF . LPAR Expr RPAR StatementError ELSE StatementError

    LPAR  shift, and go to state 85


state 44

   41 Statement: RETURN . SEMI
   42          | RETURN . Expr SEMI

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    SEMI     shift, and go to state 86
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 87


state 45

   36 Statement: LBRACE . RBRACE
   37          | LBRACE . StatementAux RBRACE
   43          | LBRACE . error RBRACE

    error    shift, and go to state 88
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    RBRACE   shift, and go to state 89
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Statement       go to state 90
    StatementAux    go to state 91
    StatementError  go to state 92
    Expr            go to state 52


state 46

   11 FunctionBody: LBRACE RBRACE .

    $default  reduce using rule 11 (FunctionBody)


state 47

   34 Statement: SEMI .

    $default  reduce using rule 34 (Statement)


state 48

   12 FunctionBody: LBRACE DeclarationAndStatements . RBRACE

    RBRACE  shift, and go to state 93


state 49

   14 DeclarationAndStatements: Declaration . DeclarationAndStatements
   16                         | Declaration .

    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    SHORT    shift, and go to state 3
    INT      shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 44
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    $default  reduce using rule 16 (DeclarationAndStatements)

    DeclarationAndStatements  go to state 94
    Declaration               go to state 49
    TypeSpec                  go to state 50
    Statement                 go to state 51
    Expr                      go to state 52


state 50

   24 Declaration: TypeSpec . Declarator DeclarationAux SEMI

    ID  shift, and go to state 53

    Declarator  go to state 21


state 51

   13 DeclarationAndStatements: Statement . DeclarationAndStatements
   15                         | Statement .

    CHAR     shift, and go to state 2
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    SHORT    shift, and go to state 3
    INT      shift, and go to state 4
    DOUBLE   shift, and go to state 5
    RETURN   shift, and go to state 44
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    $default  reduce using rule 15 (DeclarationAndStatements)

    DeclarationAndStatements  go to state 95
    Declaration               go to state 49
    TypeSpec                  go to state 50
    Statement                 go to state 51
    Expr                      go to state 52


state 52

   35 Statement: Expr . SEMI
   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    SEMI        shift, and go to state 96


state 53

   32 Declarator: ID .
   33           | ID . ASSIGN Expr

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 32 (Declarator)


state 54

   26 DeclarationAux: COMMA Declarator . DeclarationAux

    COMMA  shift, and go to state 28

    $default  reduce using rule 25 (DeclarationAux)

    DeclarationAux  go to state 97


state 55

   24 Declaration: TypeSpec Declarator DeclarationAux SEMI .

    $default  reduce using rule 24 (Declaration)


state 56

   77 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 98


state 57

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
   75     | LPAR Expr . RPAR

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    RPAR        shift, and go to state 99


state 58

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
   67     | MINUS Expr .

    $default  reduce using rule 67 (Expr)


state 59

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
   68     | NOT Expr .

    $default  reduce using rule 68 (Expr)


state 60

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
   66     | PLUS Expr .

    $default  reduce using rule 66 (Expr)


state 61

   69 Expr: ID LPAR . RPAR
   70     | ID LPAR . Expr2 RPAR
   76     | ID LPAR . error RPAR

    error    shift, and go to state 100
    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    RPAR     shift, and go to state 105
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 110


state 62

   64 Expr: Expr BITWISEOR . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 111


state 63

   63 Expr: Expr BITWISEAND . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 112


state 64

   65 Expr: Expr BITWISEXOR . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 113


state 65

   62 Expr: Expr AND . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 114


state 66

   48 Expr: Expr ASSIGN . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 115


state 67

   58 Expr: Expr MUL . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 116


state 68

   49 Expr: Expr COMMA . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 117


state 69

   59 Expr: Expr DIV . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 118


state 70

   50 Expr: Expr EQ . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 119


state 71

   53 Expr: Expr GE . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 120


state 72

   55 Expr: Expr GT . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 121


state 73

   52 Expr: Expr LE . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 122


state 74

   54 Expr: Expr LT . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 123


state 75

   57 Expr: Expr MINUS . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 124


state 76

   60 Expr: Expr MOD . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 125


state 77

   51 Expr: Expr NE . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 126


state 78

   61 Expr: Expr OR . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 127


state 79

   56 Expr: Expr PLUS . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 128


state 80

   18 FunctionDeclarator: ID LPAR ParameterList RPAR .

    $default  reduce using rule 18 (FunctionDeclarator)


state 81

   21 ParameterListAux: COMMA . ParameterDeclaration ParameterListAux

    CHAR    shift, and go to state 2
    SHORT   shift, and go to state 3
    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 129
    TypeSpec              go to state 41


state 82

   19 ParameterList: ParameterDeclaration ParameterListAux .

    $default  reduce using rule 19 (ParameterList)


state 83

   23 ParameterDeclaration: TypeSpec ID .

    $default  reduce using rule 23 (ParameterDeclaration)


state 84

   40 Statement: WHILE LPAR . Expr RPAR StatementError

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 130


state 85

   38 Statement: IF LPAR . Expr RPAR StatementError
   39          | IF LPAR . Expr RPAR StatementError ELSE StatementError

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 131


state 86

   41 Statement: RETURN SEMI .

    $default  reduce using rule 41 (Statement)


state 87

   42 Statement: RETURN Expr . SEMI
   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    SEMI        shift, and go to state 132


state 88

   43 Statement: LBRACE error . RBRACE
   47 StatementError: error . SEMI

    RBRACE  shift, and go to state 133
    SEMI    shift, and go to state 134


state 89

   36 Statement: LBRACE RBRACE .

    $default  reduce using rule 36 (Statement)


state 90

   46 StatementError: Statement .

    $default  reduce using rule 46 (StatementError)


state 91

   37 Statement: LBRACE StatementAux . RBRACE
   45 StatementAux: StatementAux . StatementError

    error    shift, and go to state 135
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    RBRACE   shift, and go to state 136
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Statement       go to state 90
    StatementError  go to state 137
    Expr            go to state 52


state 92

   44 StatementAux: StatementError .

    $default  reduce using rule 44 (StatementAux)


state 93

   12 FunctionBody: LBRACE DeclarationAndStatements RBRACE .

    $default  reduce using rule 12 (FunctionBody)


state 94

   14 DeclarationAndStatements: Declaration DeclarationAndStatements .

    $default  reduce using rule 14 (DeclarationAndStatements)


state 95

   13 DeclarationAndStatements: Statement DeclarationAndStatements .

    $default  reduce using rule 13 (DeclarationAndStatements)


state 96

   35 Statement: Expr SEMI .

    $default  reduce using rule 35 (Statement)


state 97

   26 DeclarationAux: COMMA Declarator DeclarationAux .

    $default  reduce using rule 26 (DeclarationAux)


state 98

   77 Expr: LPAR error RPAR .

    $default  reduce using rule 77 (Expr)


state 99

   75 Expr: LPAR Expr RPAR .

    $default  reduce using rule 75 (Expr)


state 100

   76 Expr: ID LPAR error . RPAR

    RPAR  shift, and go to state 138


state 101

  105 Expr2: LPAR . Expr RPAR
  107      | LPAR . error RPAR

    error    shift, and go to state 139
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 140


state 102

   97 Expr2: MINUS . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 141


state 103

   98 Expr2: NOT . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 142


state 104

   96 Expr2: PLUS . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 143


state 105

   69 Expr: ID LPAR RPAR .

    $default  reduce using rule 69 (Expr)


state 106

  104 Expr2: REALLIT .

    $default  reduce using rule 104 (Expr2)


state 107

  103 Expr2: CHRLIT .

    $default  reduce using rule 103 (Expr2)


state 108

  102 Expr2: INTLIT .

    $default  reduce using rule 102 (Expr2)


state 109

   99 Expr2: ID . LPAR RPAR
  100      | ID . LPAR Expr2 RPAR
  101      | ID .
  106      | ID . LPAR error RPAR

    LPAR  shift, and go to state 144

    $default  reduce using rule 101 (Expr2)


state 110

   70 Expr: ID LPAR Expr2 . RPAR
   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    BITWISEOR   shift, and go to state 145
    BITWISEAND  shift, and go to state 146
    BITWISEXOR  shift, and go to state 147
    AND         shift, and go to state 148
    ASSIGN      shift, and go to state 149
    MUL         shift, and go to state 150
    COMMA       shift, and go to state 151
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    OR          shift, and go to state 161
    PLUS        shift, and go to state 162
    RPAR        shift, and go to state 163


state 111

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   64     | Expr BITWISEOR Expr .
   65     | Expr . BITWISEXOR Expr

    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 64 (Expr)


state 112

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   63     | Expr BITWISEAND Expr .
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    EQ     shift, and go to state 70
    GE     shift, and go to state 71
    GT     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    NE     shift, and go to state 77
    PLUS   shift, and go to state 79

    $default  reduce using rule 63 (Expr)


state 113

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
   65     | Expr BITWISEXOR Expr .

    BITWISEAND  shift, and go to state 63
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 65 (Expr)


state 114

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   62     | Expr AND Expr .
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 62 (Expr)


state 115

   48 Expr: Expr . ASSIGN Expr
   48     | Expr ASSIGN Expr .
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 48 (Expr)


state 116

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   58     | Expr MUL Expr .
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    $default  reduce using rule 58 (Expr)


state 117

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   49     | Expr COMMA Expr .
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 49 (Expr)


state 118

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   59     | Expr DIV Expr .
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    $default  reduce using rule 59 (Expr)


state 119

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   50     | Expr EQ Expr .
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    GE     shift, and go to state 71
    GT     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 50 (Expr)


state 120

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   53     | Expr GE Expr .
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 53 (Expr)


state 121

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   55     | Expr GT Expr .
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 55 (Expr)


state 122

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   52     | Expr LE Expr .
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 52 (Expr)


state 123

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   54     | Expr LT Expr .
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 54 (Expr)


state 124

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   57     | Expr MINUS Expr .
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 69
    MOD  shift, and go to state 76

    $default  reduce using rule 57 (Expr)


state 125

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   60     | Expr MOD Expr .
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    $default  reduce using rule 60 (Expr)


state 126

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   51     | Expr NE Expr .
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL    shift, and go to state 67
    DIV    shift, and go to state 69
    GE     shift, and go to state 71
    GT     shift, and go to state 72
    LE     shift, and go to state 73
    LT     shift, and go to state 74
    MINUS  shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 79

    $default  reduce using rule 51 (Expr)


state 127

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   61     | Expr OR Expr .
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    PLUS        shift, and go to state 79

    $default  reduce using rule 61 (Expr)


state 128

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   56     | Expr PLUS Expr .
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    MUL  shift, and go to state 67
    DIV  shift, and go to state 69
    MOD  shift, and go to state 76

    $default  reduce using rule 56 (Expr)


state 129

   21 ParameterListAux: COMMA ParameterDeclaration . ParameterListAux

    COMMA  shift, and go to state 81

    $default  reduce using rule 20 (ParameterListAux)

    ParameterListAux  go to state 164


state 130

   40 Statement: WHILE LPAR Expr . RPAR StatementError
   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    RPAR        shift, and go to state 165


state 131

   38 Statement: IF LPAR Expr . RPAR StatementError
   39          | IF LPAR Expr . RPAR StatementError ELSE StatementError
   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    RPAR        shift, and go to state 166


state 132

   42 Statement: RETURN Expr SEMI .

    $default  reduce using rule 42 (Statement)


state 133

   43 Statement: LBRACE error RBRACE .

    $default  reduce using rule 43 (Statement)


state 134

   47 StatementError: error SEMI .

    $default  reduce using rule 47 (StatementError)


state 135

   47 StatementError: error . SEMI

    SEMI  shift, and go to state 134


state 136

   37 Statement: LBRACE StatementAux RBRACE .

    $default  reduce using rule 37 (Statement)


state 137

   45 StatementAux: StatementAux StatementError .

    $default  reduce using rule 45 (StatementAux)


state 138

   76 Expr: ID LPAR error RPAR .

    $default  reduce using rule 76 (Expr)


state 139

  107 Expr2: LPAR error . RPAR

    RPAR  shift, and go to state 167


state 140

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
  105 Expr2: LPAR Expr . RPAR

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    COMMA       shift, and go to state 68
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79
    RPAR        shift, and go to state 168


state 141

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2
   97      | MINUS Expr2 .

    $default  reduce using rule 97 (Expr2)


state 142

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2
   98      | NOT Expr2 .

    $default  reduce using rule 98 (Expr2)


state 143

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2
   96      | PLUS Expr2 .

    $default  reduce using rule 96 (Expr2)


state 144

   99 Expr2: ID LPAR . RPAR
  100      | ID LPAR . Expr2 RPAR
  106      | ID LPAR . error RPAR

    error    shift, and go to state 169
    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    RPAR     shift, and go to state 170
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 171


state 145

   94 Expr2: Expr2 BITWISEOR . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 172


state 146

   93 Expr2: Expr2 BITWISEAND . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 173


state 147

   95 Expr2: Expr2 BITWISEXOR . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 174


state 148

   92 Expr2: Expr2 AND . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 175


state 149

   78 Expr2: Expr2 ASSIGN . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 176


state 150

   88 Expr2: Expr2 MUL . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 177


state 151

   79 Expr2: Expr2 COMMA . Expr

    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Expr  go to state 178


state 152

   89 Expr2: Expr2 DIV . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 179


state 153

   80 Expr2: Expr2 EQ . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 180


state 154

   83 Expr2: Expr2 GE . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 181


state 155

   85 Expr2: Expr2 GT . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 182


state 156

   82 Expr2: Expr2 LE . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 183


state 157

   84 Expr2: Expr2 LT . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 184


state 158

   87 Expr2: Expr2 MINUS . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 185


state 159

   90 Expr2: Expr2 MOD . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 186


state 160

   81 Expr2: Expr2 NE . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 187


state 161

   91 Expr2: Expr2 OR . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 188


state 162

   86 Expr2: Expr2 PLUS . Expr2

    LPAR     shift, and go to state 101
    MINUS    shift, and go to state 102
    NOT      shift, and go to state 103
    PLUS     shift, and go to state 104
    REALLIT  shift, and go to state 106
    CHRLIT   shift, and go to state 107
    INTLIT   shift, and go to state 108
    ID       shift, and go to state 109

    Expr2  go to state 189


state 163

   70 Expr: ID LPAR Expr2 RPAR .

    $default  reduce using rule 70 (Expr)


state 164

   21 ParameterListAux: COMMA ParameterDeclaration ParameterListAux .

    $default  reduce using rule 21 (ParameterListAux)


state 165

   40 Statement: WHILE LPAR Expr RPAR . StatementError

    error    shift, and go to state 135
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Statement       go to state 90
    StatementError  go to state 190
    Expr            go to state 52


state 166

   38 Statement: IF LPAR Expr RPAR . StatementError
   39          | IF LPAR Expr RPAR . StatementError ELSE StatementError

    error    shift, and go to state 135
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Statement       go to state 90
    StatementError  go to state 191
    Expr            go to state 52


state 167

  107 Expr2: LPAR error RPAR .

    $default  reduce using rule 107 (Expr2)


state 168

  105 Expr2: LPAR Expr RPAR .

    $default  reduce using rule 105 (Expr2)


state 169

  106 Expr2: ID LPAR error . RPAR

    RPAR  shift, and go to state 192


state 170

   99 Expr2: ID LPAR RPAR .

    $default  reduce using rule 99 (Expr2)


state 171

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2
  100      | ID LPAR Expr2 . RPAR

    BITWISEOR   shift, and go to state 145
    BITWISEAND  shift, and go to state 146
    BITWISEXOR  shift, and go to state 147
    AND         shift, and go to state 148
    ASSIGN      shift, and go to state 149
    MUL         shift, and go to state 150
    COMMA       shift, and go to state 151
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    OR          shift, and go to state 161
    PLUS        shift, and go to state 162
    RPAR        shift, and go to state 193


state 172

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   94      | Expr2 BITWISEOR Expr2 .
   95      | Expr2 . BITWISEXOR Expr2

    BITWISEAND  shift, and go to state 146
    BITWISEXOR  shift, and go to state 147
    MUL         shift, and go to state 150
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    PLUS        shift, and go to state 162

    $default  reduce using rule 94 (Expr2)


state 173

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   93      | Expr2 BITWISEAND Expr2 .
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    EQ     shift, and go to state 153
    GE     shift, and go to state 154
    GT     shift, and go to state 155
    LE     shift, and go to state 156
    LT     shift, and go to state 157
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    NE     shift, and go to state 160
    PLUS   shift, and go to state 162

    $default  reduce using rule 93 (Expr2)


state 174

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2
   95      | Expr2 BITWISEXOR Expr2 .

    BITWISEAND  shift, and go to state 146
    MUL         shift, and go to state 150
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    PLUS        shift, and go to state 162

    $default  reduce using rule 95 (Expr2)


state 175

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   92      | Expr2 AND Expr2 .
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    BITWISEOR   shift, and go to state 145
    BITWISEAND  shift, and go to state 146
    BITWISEXOR  shift, and go to state 147
    MUL         shift, and go to state 150
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    PLUS        shift, and go to state 162

    $default  reduce using rule 92 (Expr2)


state 176

   78 Expr2: Expr2 . ASSIGN Expr2
   78      | Expr2 ASSIGN Expr2 .
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    BITWISEOR   shift, and go to state 145
    BITWISEAND  shift, and go to state 146
    BITWISEXOR  shift, and go to state 147
    AND         shift, and go to state 148
    ASSIGN      shift, and go to state 149
    MUL         shift, and go to state 150
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    OR          shift, and go to state 161
    PLUS        shift, and go to state 162

    $default  reduce using rule 78 (Expr2)


state 177

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   88      | Expr2 MUL Expr2 .
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    $default  reduce using rule 88 (Expr2)


state 178

   48 Expr: Expr . ASSIGN Expr
   49     | Expr . COMMA Expr
   50     | Expr . EQ Expr
   51     | Expr . NE Expr
   52     | Expr . LE Expr
   53     | Expr . GE Expr
   54     | Expr . LT Expr
   55     | Expr . GT Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . MUL Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | Expr . OR Expr
   62     | Expr . AND Expr
   63     | Expr . BITWISEAND Expr
   64     | Expr . BITWISEOR Expr
   65     | Expr . BITWISEXOR Expr
   79 Expr2: Expr2 COMMA Expr .

    BITWISEOR   shift, and go to state 62
    BITWISEAND  shift, and go to state 63
    BITWISEXOR  shift, and go to state 64
    AND         shift, and go to state 65
    ASSIGN      shift, and go to state 66
    MUL         shift, and go to state 67
    DIV         shift, and go to state 69
    EQ          shift, and go to state 70
    GE          shift, and go to state 71
    GT          shift, and go to state 72
    LE          shift, and go to state 73
    LT          shift, and go to state 74
    MINUS       shift, and go to state 75
    MOD         shift, and go to state 76
    NE          shift, and go to state 77
    OR          shift, and go to state 78
    PLUS        shift, and go to state 79

    $default  reduce using rule 79 (Expr2)


state 179

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   89      | Expr2 DIV Expr2 .
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    $default  reduce using rule 89 (Expr2)


state 180

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   80      | Expr2 EQ Expr2 .
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    GE     shift, and go to state 154
    GT     shift, and go to state 155
    LE     shift, and go to state 156
    LT     shift, and go to state 157
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    PLUS   shift, and go to state 162

    $default  reduce using rule 80 (Expr2)


state 181

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   83      | Expr2 GE Expr2 .
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    PLUS   shift, and go to state 162

    $default  reduce using rule 83 (Expr2)


state 182

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   85      | Expr2 GT Expr2 .
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    PLUS   shift, and go to state 162

    $default  reduce using rule 85 (Expr2)


state 183

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   82      | Expr2 LE Expr2 .
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    PLUS   shift, and go to state 162

    $default  reduce using rule 82 (Expr2)


state 184

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   84      | Expr2 LT Expr2 .
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    PLUS   shift, and go to state 162

    $default  reduce using rule 84 (Expr2)


state 185

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   87      | Expr2 MINUS Expr2 .
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL  shift, and go to state 150
    DIV  shift, and go to state 152
    MOD  shift, and go to state 159

    $default  reduce using rule 87 (Expr2)


state 186

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   90      | Expr2 MOD Expr2 .
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    $default  reduce using rule 90 (Expr2)


state 187

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   81      | Expr2 NE Expr2 .
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL    shift, and go to state 150
    DIV    shift, and go to state 152
    GE     shift, and go to state 154
    GT     shift, and go to state 155
    LE     shift, and go to state 156
    LT     shift, and go to state 157
    MINUS  shift, and go to state 158
    MOD    shift, and go to state 159
    PLUS   shift, and go to state 162

    $default  reduce using rule 81 (Expr2)


state 188

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   91      | Expr2 OR Expr2 .
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    BITWISEOR   shift, and go to state 145
    BITWISEAND  shift, and go to state 146
    BITWISEXOR  shift, and go to state 147
    AND         shift, and go to state 148
    MUL         shift, and go to state 150
    DIV         shift, and go to state 152
    EQ          shift, and go to state 153
    GE          shift, and go to state 154
    GT          shift, and go to state 155
    LE          shift, and go to state 156
    LT          shift, and go to state 157
    MINUS       shift, and go to state 158
    MOD         shift, and go to state 159
    NE          shift, and go to state 160
    PLUS        shift, and go to state 162

    $default  reduce using rule 91 (Expr2)


state 189

   78 Expr2: Expr2 . ASSIGN Expr2
   79      | Expr2 . COMMA Expr
   80      | Expr2 . EQ Expr2
   81      | Expr2 . NE Expr2
   82      | Expr2 . LE Expr2
   83      | Expr2 . GE Expr2
   84      | Expr2 . LT Expr2
   85      | Expr2 . GT Expr2
   86      | Expr2 . PLUS Expr2
   86      | Expr2 PLUS Expr2 .
   87      | Expr2 . MINUS Expr2
   88      | Expr2 . MUL Expr2
   89      | Expr2 . DIV Expr2
   90      | Expr2 . MOD Expr2
   91      | Expr2 . OR Expr2
   92      | Expr2 . AND Expr2
   93      | Expr2 . BITWISEAND Expr2
   94      | Expr2 . BITWISEOR Expr2
   95      | Expr2 . BITWISEXOR Expr2

    MUL  shift, and go to state 150
    DIV  shift, and go to state 152
    MOD  shift, and go to state 159

    $default  reduce using rule 86 (Expr2)


state 190

   40 Statement: WHILE LPAR Expr RPAR StatementError .

    $default  reduce using rule 40 (Statement)


state 191

   38 Statement: IF LPAR Expr RPAR StatementError .
   39          | IF LPAR Expr RPAR StatementError . ELSE StatementError

    ELSE  shift, and go to state 194

    $default  reduce using rule 38 (Statement)


state 192

  106 Expr2: ID LPAR error RPAR .

    $default  reduce using rule 106 (Expr2)


state 193

  100 Expr2: ID LPAR Expr2 RPAR .

    $default  reduce using rule 100 (Expr2)


state 194

   39 Statement: IF LPAR Expr RPAR StatementError ELSE . StatementError

    error    shift, and go to state 135
    WHILE    shift, and go to state 42
    IF       shift, and go to state 43
    RETURN   shift, and go to state 44
    LBRACE   shift, and go to state 45
    LPAR     shift, and go to state 30
    MINUS    shift, and go to state 31
    NOT      shift, and go to state 32
    PLUS     shift, and go to state 33
    SEMI     shift, and go to state 47
    REALLIT  shift, and go to state 34
    CHRLIT   shift, and go to state 35
    INTLIT   shift, and go to state 36
    ID       shift, and go to state 37

    Statement       go to state 90
    StatementError  go to state 195
    Expr            go to state 52


state 195

   39 Statement: IF LPAR Expr RPAR StatementError ELSE StatementError .

    $default  reduce using rule 39 (Statement)
