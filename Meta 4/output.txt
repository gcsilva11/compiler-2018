declare i32 @getchar()
declare i32 @putchar(i32)

define i32 @assignment() {
	%a = alloca i32
	%b = alloca i32
	%c = alloca i32
	%d = alloca i32
	%1 = load i32, i32* %b
	store i32 %1, i32* %a
	%aa = alloca i8
	%bb = alloca i8
	%2 = load i8, i8* %bb
	store i8 %2, i8* %aa
	%aaa = alloca i16
	%bbb = alloca i16
	%3 = load i16, i16* %bbb
	store i16 %3, i16* %aaa
	%aaaa = alloca double
	%bbbb = alloca double
	%4 = load double, double* %bbbb
	store double %4, double* %aaaa
	store i32 1, i32* %a
	store i32 1, i32* %b
	store i32 1, i32* %c
	store i32 1, i32* %d
	store i8 65, i8* %aa
	store i8 122, i8* %bb
	store i16 1, i16* %aaa
	store i16 1, i16* %bbb
	store double 1.0, double* %aaaa
	store double 1.0, double* %bbbb
	%5 = load i32, i32* %d
	ret i32 %5
}

define i8 @chario() {
	%a = alloca i8
	%1 = load i8, i8* %a
	ret i8 %1
}

define i32 @unary_minus() {
	%a = alloca i32
	%bbb = alloca i32
	%ccc = alloca i8
	%ddd = alloca i16
	%b = alloca i32
	%1 = load i32, i32* %a
	%sub0 = sub nsw i32 0, %1
	store i32 %sub0, i32* %b
	%c = alloca i32
	%2 = load i32, i32* %b
	%sub1 = sub nsw i32 0, %2
	store i32 %sub1, i32* %c
	%d = alloca i32
	store i32 -2, i32* %d
	%3 = load i32, i32* %b
	%sub2 = sub nsw i32 0, %3
	store i32 %sub2, i32* %d
	%4 = load i32, i32* %d
	ret i32 %4
}

define void @main() {
	%_11 = alloca i8
	store i8 65, i8* %_11
	%_12 = alloca i32
	store i32 65, i32* %_12
	%_13 = alloca i16
	store i16 65, i16* %_13
	%_14 = alloca double
	store double 65.0, double* %_14
	call i32 @putchar(i32 97)
	call i32 @putchar(i32 97)
	call i32 @putchar(i32 65)
	%4 = load i8, i8* %_11
	%conv0 = sext i8 %4 to i32
	call i32 @putchar(i32 %conv0)
	%6 = load i32, i32* %_12
	call i32 @putchar(i32 %6)
	%8 = load i16, i16* %_13
	%conv1 = sext i16 %8 to i32
	call i32 @putchar(i32 %conv1)
	%10 = load double, double* %_14
	%conv2 = fptoui double %10 to i32
	call i32 @putchar(i32 %conv2)
	call i32 @putchar(i32 10)
	call i32 @putchar(i32 9)
	call i32 @putchar(i32 10)
	call i32 @putchar(i32 39)
	call i32 @putchar(i32 10)
	call i32 @putchar(i32 34)
	call i32 @putchar(i32 10)
	call i32 @putchar(i32 92)
	call i32 @putchar(i32 83)
	call i32 @putchar(i32 78)
	call i32 @putchar(i32 78)
	call i32 @putchar(i32 8)
	call i32 @putchar(i32 53)
	ret void 
}

