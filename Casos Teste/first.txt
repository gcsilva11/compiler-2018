Line 1, col 25: Invalid use of void type in declaration
Line 1, col 30: Invalid use of void type in declaration
Line 2, col 13: Invalid use of void type in declaration
Line 2, col 8: Conflicting types (got double(void,char), expected double(char,int,void,void,double,int,double))
Line 4, col 18: Unknown symbol d
Line 5, col 9: Symbol a already defined
Line 5, col 13: Unknown symbol b2
Line 5, col 19: Unknown symbol x
Line 10, col 5: Conflicting types (got int(int,int,int), expected double(char,int,void,void,double,int,double))
Line 11, col 9: Symbol x already defined
Line 11, col 16: Symbol y already defined
Line 11, col 23: Symbol z already defined
Line 12, col 9: Symbol a already defined
Line 12, col 11: Symbol b already defined
Line 12, col 13: Symbol c already defined
Line 24, col 6: Unknown symbol variable
Line 25, col 6: Unknown symbol variable
Line 26, col 6: Unknown symbol variable
Line 27, col 6: Unknown symbol variable
Line 28, col 6: Unknown symbol variable
Line 29, col 6: Unknown symbol variable
Line 30, col 6: Unknown symbol variable
Line 31, col 6: Unknown symbol variable
Line 32, col 6: Unknown symbol variable
Line 33, col 6: Unknown symbol variable
Line 34, col 5: Unknown symbol variable
Line 35, col 6: Unknown symbol variable
Line 36, col 6: Unknown symbol variable
Line 37, col 6: Unknown symbol variable
Line 38, col 5: Unknown symbol variable
Line 38, col 25: Unknown symbol s
Line 39, col 6: Unknown symbol variable
Line 40, col 6: Unknown symbol variable
Line 41, col 6: Unknown symbol variable
Line 43, col 6: Unknown symbol variable
Line 44, col 5: Unknown symbol i
Line 44, col 11: Unknown symbol i
Line 44, col 21: Unknown symbol a
Line 44, col 25: Unknown symbol b
Line 44, col 29: Unknown symbol c
Line 44, col 33: Unknown symbol d
Line 45, col 6: Unknown symbol a
Line 45, col 11: Unknown symbol b
Line 46, col 6: Unknown symbol printf
Line 46, col 13: Unknown symbol a
Line 46, col 17: Unknown symbol b
Line 46, col 24: Unknown symbol c
Line 46, col 29: Unknown symbol d
Line 46, col 34: Unknown symbol x
Line 46, col 39: Unknown symbol x
Line 46, col 44: Unknown symbol a
Line 46, col 46: Unknown symbol y
Line 46, col 50: Unknown symbol b
Line 46, col 53: Unknown symbol z
Line 46, col 57: Unknown symbol d
Line 48, col 5: Unknown symbol raca
Line 48, col 10: Unknown symbol rrew
Line 48, col 15: Unknown symbol oi
Line 48, col 26: Unknown symbol oi
Line 48, col 29: Unknown symbol x
Line 48, col 31: Unknown symbol d
Line 50, col 5: Unknown symbol printf
Line 50, col 12: Unknown symbol oi
Line 50, col 15: Unknown symbol x
Line 50, col 17: Unknown symbol y
Line 57, col 13: Unknown symbol x
Line 58, col 17: Unknown symbol x
Line 59, col 17: Unknown symbol printf
Line 59, col 24: Unknown symbol x
Line 60, col 17: Unknown symbol printf
Line 60, col 24: Unknown symbol x
Line 61, col 17: Unknown symbol printf
Line 61, col 24: Unknown symbol x
Line 62, col 17: Unknown symbol printf
Line 62, col 24: Unknown symbol x
Line 67, col 13: Unknown symbol printf
Line 67, col 20: Unknown symbol x
Line 68, col 13: Unknown symbol printf
Line 68, col 20: Unknown symbol x
Line 69, col 13: Unknown symbol printf
Line 69, col 20: Unknown symbol x
Line 70, col 17: Unknown symbol printf
Line 70, col 24: Unknown symbol x
Line 73, col 17: Unknown symbol printf
Line 73, col 24: Unknown symbol x
Line 80, col 13: Unknown symbol printf
Line 80, col 20: Unknown symbol x
Line 82, col 12: Unknown symbol cona
Line 83, col 9: Unknown symbol printf
Line 83, col 16: Unknown symbol x
Line 83, col 19: Unknown symbol printf
Line 83, col 26: Unknown symbol x
Line 83, col 29: Unknown symbol printf
Line 83, col 36: Unknown symbol x
Line 83, col 39: Unknown symbol printf
Line 83, col 46: Unknown symbol x
Line 83, col 49: Unknown symbol printf
Line 83, col 56: Unknown symbol x
Line 87, col 9: Unknown symbol x
Line 87, col 19: Unknown symbol x
Line 90, col 10: Unknown symbol x
Line 91, col 9: Unknown symbol printf
Line 93, col 14: Unknown symbol oi
Line 93, col 17: Unknown symbol wk
Line 94, col 9: Unknown symbol printf
Line 94, col 16: Unknown symbol x
Line 95, col 9: Unknown symbol gets
Line 98, col 9: Unknown symbol printf
Line 98, col 16: Unknown symbol x
Line 101, col 9: Unknown symbol a
Line 102, col 9: Unknown symbol i
Line 104, col 11: Unknown symbol a
Line 105, col 15: Unknown symbol b
Line 106, col 13: Unknown symbol printf
Line 107, col 16: Unknown symbol c
Line 108, col 23: Unknown symbol d
Line 123, col 14: Unknown symbol b
Line 123, col 24: Unknown symbol b
Line 124, col 19: Unknown symbol v
Line 124, col 21: Unknown symbol c
Line 124, col 23: Unknown symbol d
Line 124, col 26: Unknown symbol b
Line 124, col 32: Unknown symbol b
Line 128, col 5: Conflicting types (got int(int,char), expected double(char,int,void,void,double,int,double))
Line 129, col 7: Symbol a already defined
Line 129, col 10: Symbol b already defined
Line 145, col 5: Conflicting types (got int(int), expected double(char,int,void,void,double,int,double))
Line 160, col 5: Conflicting types (got int(void), expected double(char,int,void,void,double,int,double))
Line 162, col 9: Symbol a already defined
Line 162, col 11: Symbol b already defined
Line 162, col 13: Symbol c already defined
Line 162, col 15: Symbol d already defined
Line 162, col 17: Symbol e already defined
Line 164, col 5: Unknown symbol funcao
Line 165, col 5: Unknown symbol funcao
Line 166, col 5: Unknown symbol funcao
Line 167, col 5: Unknown symbol funcao
Line 176, col 5: Conflicting types (got int(void), expected double(char,int,void,void,double,int,double))
Line 220, col 6: Unknown symbol oio
Line 220, col 11: Unknown symbol ioi
Line 225, col 5: Unknown symbol e
Line 225, col 14: Unknown symbol b
Line 225, col 19: Unknown symbol c
Line 225, col 23: Unknown symbol d
Line 227, col 4: Unknown symbol e
Line 227, col 14: Unknown symbol b
Line 227, col 19: Unknown symbol c
Line 227, col 24: Unknown symbol d
Line 229, col 4: Unknown symbol e
Line 229, col 13: Unknown symbol b
Line 229, col 19: Unknown symbol c
Line 229, col 23: Unknown symbol d
Line 231, col 4: Unknown symbol e
Line 231, col 13: Unknown symbol b
Line 231, col 17: Unknown symbol c
Line 231, col 22: Unknown symbol d
Line 233, col 4: Unknown symbol printf
Line 233, col 11: Unknown symbol q
Line 234, col 4: Unknown symbol printf
Line 235, col 4: Unknown symbol printf
Line 236, col 4: Unknown symbol printf
Line 251, col 5: Conflicting types (got int(double,int), expected int(int,double))
Line 253, col 5: Conflicting types (got int(void), expected double(char,int,void,void,double,int,double))
Line 255, col 8: Symbol a already defined
Line 256, col 8: Symbol b already defined
Line 261, col 4: Unknown symbol printf
Line 266, col 5: Symbol max already defined
Line 266, col 19: Invalid use of void type in declaration
Line 278, col 5: Conflicting types (got int(int), expected double(char,int,void,void,double,int,double))
Line 281, col 5: Unknown symbol scanf
Line 283, col 5: Unknown symbol printf
Line 288, col 5: Conflicting types (got int(int), expected double(char,int,void,void,double,int,double))
Line 293, col 9: Unknown symbol result
Line 293, col 18: Unknown symbol result
Line 297, col 5: Unknown symbol printf
Line 297, col 12: Unknown symbol result
Line 304, col 5: Conflicting types (got int(int), expected double(char,int,void,void,double,int,double))
Line 315, col 5: Unknown symbol printf
Line 320, col 5: Conflicting types (got int(void), expected double(char,int,void,void,double,int,double))
Line 324, col 5: Unknown symbol printf
===== Global Symbol Table =====
putchar	int(int)
getchar	int(void)
main	double(char,int,void,void,double,int,double)
expressions	int(void)
statements	int(void)
oi	int(int,int)
x	int(int)
a	int
test	void(int)
fu	int(void)
max	int(int,double)

===== Function expressions Symbol Table =====
return	int

===== Function statements Symbol Table =====
return	int

===== Function oi Symbol Table =====
return	int
tudo	int	param
bem	int	param
a	char
b	char
c	char
d	double
e	double
f	double

===== Function x Symbol Table =====
return	int
x	int	param
a	char
r	char

===== Function test Symbol Table =====
return	void
a	int	param

===== Function fu Symbol Table =====
return	int

===== Function max Symbol Table =====
return	int
num1	int	param
num2	double	param
result	int

Program
..FuncDeclaration
....Double
....Id(main)
....ParamList
......ParamDeclaration
........Char
........Id(in)
......ParamDeclaration
........Int
......ParamDeclaration
........Void
......ParamDeclaration
........Void
......ParamDeclaration
........Double
......ParamDeclaration
........Int
......ParamDeclaration
........Double
..FuncDefinition
....Double
....Id(main)
....ParamList
......ParamDeclaration
........Void
......ParamDeclaration
........Char
....FuncBody
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......Declaration
........Int
........Id(c)
......Comma - int
........Store - undef
..........Id(d) - undef
..........IntLit(2) - int
........Store - int
..........Id(a) - int
..........ChrLit('a') - int
......Declaration
........Int
........Id(a)
........Ne - int
..........Id(b2) - undef
..........Id(x) - undef
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(x)
......ParamDeclaration
........Int
........Id(y)
......ParamDeclaration
........Int
........Id(z)
....FuncBody
......Declaration
........Int
........Id(x)
........IntLit(1) - int
......Declaration
........Int
........Id(y)
........IntLit(2) - int
......Declaration
........Int
........Id(z)
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......Declaration
........Int
........Id(c)
......Declaration
........Int
........Id(d)
......Declaration
........Int
........Id(e)
......If
........Or - int
..........And - int
............Gt - int
..............Id(x) - int
..............Id(y) - int
............Gt - int
..............Id(z) - int
..............Id(y) - int
..........Ne - int
............Id(z) - int
............Id(x) - int
........While
..........IntLit(1) - int
..........Return
............IntLit(1) - int
........Return
..........IntLit(0) - int
..FuncDefinition
....Int
....Id(expressions)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Comma - int
........Eq - int
..........Id(variable) - undef
..........IntLit(2) - int
........Ne - int
..........Id(variable) - undef
..........IntLit(2) - int
......Gt - int
........Id(variable) - undef
........IntLit(2) - int
......Lt - int
........Id(variable) - undef
........IntLit(2) - int
......Ge - int
........Id(variable) - undef
........IntLit(2) - int
......Le - int
........Id(variable) - undef
........IntLit(2) - int
......BitWiseOr - int
........Id(variable) - undef
........IntLit(2) - int
......BitWiseAnd - int
........Id(variable) - undef
........IntLit(2) - int
......And - int
........Id(variable) - undef
........IntLit(2) - int
......Or - int
........Id(variable) - undef
........IntLit(2) - int
......BitWiseXor - int
........Id(variable) - undef
........IntLit(2) - int
......Mod - int
........Id(variable) - undef
........IntLit(2) - int
......Div - int
........Mul - int
..........Id(variable) - undef
..........IntLit(2) - int
........IntLit(2) - int
......Mul - int
........Div - int
..........Id(variable) - undef
..........IntLit(2) - int
........IntLit(2) - int
......Div - int
........Id(variable) - undef
........Plus - int
..........Call - int
............Id(getchar) - int(void)
............Id(s) - undef
......Not - int
........Id(variable) - undef
......Plus - undef
........Id(variable) - undef
......Minus - undef
........Id(variable) - undef
......Store - undef
........Plus - undef
..........Id(variable) - undef
........IntLit(2) - int
......Store - undef
........Id(i) - undef
........Store - int
..........BitWiseXor - int
............Not - int
..............Id(i) - undef
............IntLit(1) - int
..........BitWiseOr - int
............Add - undef
..............Id(a) - undef
..............Id(b) - undef
............Mod - int
..............Id(c) - undef
..............Id(d) - undef
......Store - undef
........Id(a) - undef
........Id(b) - undef
......Call - undef
........Id(printf) - undef
........Store - undef
..........Id(a) - undef
..........Add - int
............Id(b) - undef
............IntLit(1) - int
........Eq - int
..........Id(c) - undef
..........Mod - int
............Div - int
..............Id(d) - undef
..............Plus - int
................Minus - int
..................Not - int
....................Id(x) - undef
............IntLit(4) - int
........Or - int
..........Id(x) - undef
..........Id(a) - undef
........BitWiseAnd - undef
..........Id(y) - undef
..........Id(b) - undef
........BitWiseXor - undef
..........Id(z) - undef
..........Id(d) - undef
......Comma - int
........Comma - undef
..........Comma - undef
............Id(raca) - undef
............Id(rrew) - undef
..........Id(oi) - undef
........Call - int
..........Id(putchar) - int(int)
..........Id(oi) - undef
..........Id(x) - undef
..........Id(d) - undef
......Call - undef
........Id(printf) - undef
........Id(oi) - undef
........Id(x) - undef
........Id(y) - undef
..FuncDefinition
....Int
....Id(statements)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......While
........IntLit(1) - int
........StatList
..........If
............Id(x) - undef
............StatList
..............If
................Id(x) - undef
................StatList
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Return
....................IntLit(1) - int
................Null
..............If
................IntLit(1) - int
................StatList
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
..................Call - undef
....................Id(printf) - undef
....................Id(x) - undef
................Call - undef
..................Id(printf) - undef
..................Id(x) - undef
............StatList
..............While
................IntLit(1) - int
................Return
..................IntLit(0) - int
..............Call - undef
................Id(printf) - undef
................Id(x) - undef
..........If
............Id(cona) - undef
............StatList
..............Call - undef
................Id(printf) - undef
................Id(x) - undef
..............Call - undef
................Id(printf) - undef
................Id(x) - undef
..............Call - undef
................Id(printf) - undef
................Id(x) - undef
..............Call - undef
................Id(printf) - undef
................Id(x) - undef
..............Call - undef
................Id(printf) - undef
................Id(x) - undef
..............Return
................IntLit(1) - int
............Null
......If
........And - int
..........Eq - int
............Id(x) - undef
............IntLit(1) - int
..........Ne - int
............Id(x) - undef
............IntLit(1) - int
........Return
..........IntLit(1) - int
........Null
......If
........Not - int
..........Id(x) - undef
........Call - undef
..........Id(printf) - undef
..........ChrLit('a') - int
........If
..........Comma - undef
............Id(oi) - undef
............Id(wk) - undef
..........StatList
............Call - undef
..............Id(printf) - undef
..............Id(x) - undef
............Call - undef
..............Id(gets) - undef
..........Call - undef
............Id(printf) - undef
............Id(x) - undef
......If
........Id(a) - undef
........Id(i) - undef
........Null
......While
........Id(a) - undef
........While
..........Id(b) - undef
..........StatList
............Call - undef
..............Id(printf) - undef
..............IntLit(1) - int
............If
..............Id(c) - undef
..............While
................Id(d) - undef
................Null
..............Null
..FuncDefinition
....Int
....Id(oi)
....ParamList
......ParamDeclaration
........Int
........Id(tudo)
......ParamDeclaration
........Int
........Id(bem)
....FuncBody
......Declaration
........Char
........Id(a)
......Declaration
........Char
........Id(b)
......Declaration
........Char
........Id(c)
........ChrLit('a') - int
......Declaration
........Double
........Id(d)
......Declaration
........Double
........Id(e)
......Declaration
........Double
........Id(f)
......Store - double
........Id(e) - double
........IntLit(4) - int
......Store - double
........Id(f) - double
........Add - double
..........Id(d) - double
..........Id(e) - double
..FuncDefinition
....Int
....Id(x)
....ParamList
......ParamDeclaration
........Int
........Id(x)
....FuncBody
......Declaration
........Char
........Id(a)
........Id(b) - undef
......Declaration
........Char
........Id(r)
........Sub - char
..........Id(a) - char
..........Id(b) - undef
......Call - int
........Id(putchar) - int(int)
........Store - int
..........Id(x) - int
..........Id(a) - char
........Add - char
..........Id(a) - char
..........Id(v) - undef
........Sub - undef
..........Id(c) - undef
..........Id(d) - undef
........Not - int
..........Id(b) - undef
........Plus - char
..........Id(a) - char
........Minus - undef
..........Id(b) - undef
..Declaration
....Int
....Id(a)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(argc)
......ParamDeclaration
........Char
........Id(argv)
....FuncBody
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......If
........Id(a) - int
........Null
........If
..........Id(a) - int
..........Null
..........Store - int
............Id(a) - int
............IntLit(1) - int
..FuncDefinition
....Void
....Id(test)
....ParamList
......ParamDeclaration
........Int
........Id(a)
....FuncBody
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
....FuncBody
......Call - void
........Id(test) - void(int)
........Comma - int
..........IntLit(2) - int
..........IntLit(3) - int
........IntLit(1) - int
......If
........Id(b) - int
........StatList
..........If
............Id(c) - int
............Store - int
..............Id(a) - int
..............IntLit(2) - int
............Null
..........If
............Id(b) - int
............If
..............Id(e) - int
..............Null
..............Null
............Null
........Null
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Declaration
........Int
........Id(a)
......Declaration
........Int
........Id(b)
......Declaration
........Int
........Id(c)
......Declaration
........Int
........Id(d)
......Declaration
........Int
........Id(e)
......Call - undef
........Id(funcao) - undef
......Call - undef
........Id(funcao) - undef
........Id(a) - int
......Call - undef
........Id(funcao) - undef
........Id(a) - int
........Id(b) - int
......Call - undef
........Id(funcao) - undef
........Comma - int
..........Id(a) - int
..........Id(b) - int
......Not - int
........Plus - int
..........Id(a) - int
......Minus - int
........Not - int
..........Id(a) - int
......Store - int
........Add - int
..........Mul - int
............Add - int
..............Id(a) - int
..............Id(b) - int
............Id(a) - int
..........Id(b) - int
........Gt - int
..........Div - int
............Id(b) - int
............Id(a) - int
..........Mul - int
............Id(a) - int
............Sub - int
..............Id(c) - int
..............Id(d) - int
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......If
........Id(a) - int
........Store - int
..........Id(a) - int
..........IntLit(0) - int
........Null
......If
........Id(a) - int
........Store - int
..........Id(a) - int
..........IntLit(0) - int
........Store - int
..........Id(a) - int
..........IntLit(0) - int
......If
........Id(a) - int
........StatList
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
........StatList
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
..........Store - int
............Id(a) - int
............IntLit(0) - int
......If
........Id(a) - int
........Null
........Null
......If
........Id(a) - int
........StatList
..........StatList
............Store - int
..............Id(a) - int
..............IntLit(0) - int
............Store - int
..............Id(a) - int
..............IntLit(0) - int
..........StatList
............Store - int
..............Id(a) - int
..............IntLit(0) - int
............Store - int
..............Id(a) - int
..............IntLit(0) - int
..........StatList
............Store - int
..............Id(a) - int
..............IntLit(0) - int
............Store - int
..............Id(a) - int
..............IntLit(0) - int
..........StatList
............Store - int
..............Id(a) - int
..............IntLit(0) - int
............Eq - int
..............Id(a) - int
..............IntLit(0) - int
........Null
......While
........Id(a) - int
........Store - int
..........Id(a) - int
..........IntLit(0) - int
......While
........Id(a) - int
........Null
......Return
........Id(a) - int
......Return
........Null
......Div - undef
........Minus - undef
..........Id(oio) - undef
........Plus - undef
..........Id(ioi) - undef
..FuncDefinition
....Int
....Id(fu)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Store - undef
........Id(e) - undef
........Div - int
..........Mul - int
............Add - int
..............Id(a) - int
..............Id(b) - undef
............Id(c) - undef
..........Id(d) - undef
......Div - int
........Mul - int
..........IntLit(30) - int
..........IntLit(15) - int
........IntLit(5) - int
......Store - undef
........Id(e) - undef
........Div - int
..........Mul - int
............Add - int
..............Id(a) - int
..............Id(b) - undef
............Id(c) - undef
..........Id(d) - undef
......Div - int
........Mul - int
..........IntLit(30) - int
..........IntLit(15) - int
........IntLit(5) - int
......Store - undef
........Id(e) - undef
........Mul - int
..........Add - int
............Id(a) - int
............Id(b) - undef
..........Div - undef
............Id(c) - undef
............Id(d) - undef
......Mul - int
........IntLit(30) - int
........Div - int
..........IntLit(15) - int
..........IntLit(5) - int
......Store - undef
........Id(e) - undef
........Add - int
..........Id(a) - int
..........Div - undef
............Mul - undef
..............Id(b) - undef
..............Id(c) - undef
............Id(d) - undef
......Add - int
........IntLit(20) - int
........Div - int
..........IntLit(150) - int
..........IntLit(5) - int
......Call - undef
........Id(printf) - undef
........Call - undef
..........Id(q) - undef
..........IntLit(1) - int
..........IntLit(2) - int
........Comma - int
..........Comma - int
............IntLit(3) - int
............IntLit(3) - int
..........IntLit(4) - int
......Call - undef
........Id(printf) - undef
........IntLit(1) - int
........Comma - int
..........IntLit(2) - int
..........IntLit(3) - int
......Call - undef
........Id(printf) - undef
........Comma - int
..........IntLit(1) - int
..........IntLit(2) - int
........IntLit(3) - int
......Call - undef
........Id(printf) - undef
........Comma - int
..........IntLit(3) - int
..........IntLit(4) - int
..FuncDefinition
....Int
....Id(max)
....ParamList
......ParamDeclaration
........Int
........Id(num1)
......ParamDeclaration
........Double
........Id(num2)
....FuncBody
......Declaration
........Int
........Id(result)
......If
........Gt - int
..........Id(num1) - int
..........Id(num2) - double
........Store - int
..........Id(result) - int
..........Id(num1) - int
........Store - int
..........Id(result) - int
..........Id(num2) - double
......Return
........Id(result) - int
..FuncDeclaration
....Int
....Id(max)
....ParamList
......ParamDeclaration
........Double
........Id(num1)
......ParamDeclaration
........Int
........Id(num2)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......Declaration
........Int
........Id(a)
........IntLit(100) - int
......Declaration
........Int
........Id(b)
........IntLit(200) - int
......Declaration
........Int
........Id(ret)
......Store - int
........Id(ret) - int
........Call - int
..........Id(max) - int(int,double)
..........Id(a) - int
..........Id(b) - int
......Call - undef
........Id(printf) - undef
........Id(a) - int
......Return
........IntLit(0) - int
..FuncDefinition
....Int
....Id(max)
....ParamList
......ParamDeclaration
........Int
........Id(num1)
......ParamDeclaration
........Void
....FuncBody
......Declaration
........Int
........Id(result)
......If
........Gt
..........Id(num1)
..........Id(num2)
........Store
..........Id(result)
..........Id(num1)
........Store
..........Id(result)
..........Id(num2)
......Return
........Id(result)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(a)
....FuncBody
......Declaration
........Int
........Id(firstNumber)
......Declaration
........Int
........Id(secondNumber)
......Declaration
........Int
........Id(sumOfTwoNumbers)
......Call - undef
........Id(scanf) - undef
........Id(firstNumber) - int
........Id(secondNumber) - int
......Store - int
........Id(sumOfTwoNumbers) - int
........Add - int
..........Id(firstNumber) - int
..........Id(secondNumber) - int
......Call - undef
........Id(printf) - undef
........Id(firstNumber) - int
........Id(secondNumber) - int
........Id(sumOfTwoNumbers) - int
......Return
........IntLit(0) - int
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(a)
....FuncBody
......Declaration
........Int
........Id(base)
......Declaration
........Int
........Id(exponent)
......While
........Ne - int
..........Id(exponent) - int
..........IntLit(0) - int
........StatList
..........Store - undef
............Id(result) - undef
............Mul - int
..............Id(result) - undef
..............Id(base) - int
..........Store - int
............Id(exponent) - int
............Sub - int
..............Id(exponent) - int
..............IntLit(1) - int
......Call - undef
........Id(printf) - undef
........Id(result) - undef
......Return
........IntLit(0) - int
..Declaration
....Int
....Id(a)
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Int
........Id(n)
....FuncBody
......Declaration
........Int
........Id(reversedNumber)
........IntLit(0) - int
......Declaration
........Int
........Id(remainder)
......While
........Ne - int
..........Id(n) - int
..........IntLit(0) - int
........StatList
..........Store - int
............Id(remainder) - int
............Mod - int
..............Id(n) - int
..............IntLit(10) - int
..........Store - int
............Id(reversedNumber) - int
............Add - int
..............Mul - int
................Id(reversedNumber) - int
................IntLit(10) - int
..............Id(remainder) - int
..........Store - int
............Id(n) - int
............Div - int
..............Id(n) - int
..............IntLit(10) - int
......Call - undef
........Id(printf) - undef
........Id(reversedNumber) - int
......Return
........IntLit(0) - int
..FuncDefinition
....Int
....Id(main)
....ParamList
......ParamDeclaration
........Void
....FuncBody
......If
........Comma - int
..........IntLit(1) - int
..........IntLit(2) - int
........Null
........Null
......If
........And - int
..........IntLit(1) - int
..........IntLit(2) - int
........Null
........Null
......Call - undef
........Id(printf) - undef
........Id(reversedNumber) - int
......Return
........IntLit(0) - int
